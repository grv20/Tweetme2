{"ast":null,"code":"var _jsxFileName = \"/home/woltab/my_works/tweetme2/tweetme2-web/src/App.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Tweet } from './tweets';\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest(); //retrieval of data  from xhr for\n  //purpose of continually modifying loaded web page underlying concept\n  //of AJAX Design.\n\n  const method = 'GET';\n  const url = \"http://localhost:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url); //open up this method with this url\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e); //we are basically calling myCallback with parameters response and status\n\n    callback({\n      \"message\": \"The request was an error!\"\n    }, 400); //A callback function is a function passed into another function as an argument,\n    // which is then invoked inside the outer function to complete some kind of routine or action.\n  };\n\n  xhr.send(); //trigger the request after i send it up\n}\n\nfunction TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    //myCallback is a function which takes response and status as parameter\n    const myCallback = (response, status) => {\n      //console.log(response,status)\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    }; // do my lookup\n    //we are passing a function as an argument to another function\n    //It will be async callback since first request to load tweets willbe made\n    //and depending on response myCallback will be called \n\n\n    loadTweets(myCallback); //The Map object holds key-value pairs and remembers the original insertion order of the keys.\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-item.id`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TweetsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/woltab/my_works/tweetme2/tweetme2-web/src/App.js"],"names":["React","useCallback","useEffect","useState","Tweet","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","TweetsList","props","tweets","setTweets","myCallback","alert","map","item","index","App","logo"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Tweet} from './tweets'\n\nfunction loadTweets(callback){\n  const xhr = new XMLHttpRequest() //retrieval of data  from xhr for\n  //purpose of continually modifying loaded web page underlying concept\n  //of AJAX Design.\n  const method = 'GET'\n  const url = \"http://localhost:8000/api/tweets/\"\n  const responseType = \"json\"\n  xhr.responseType = responseType\n  xhr.open(method,url) //open up this method with this url\n  xhr.onload = function(){\n    callback(xhr.response,xhr.status)\n  }\n  xhr.onerror = function (e){\n    console.log(e)\n    //we are basically calling myCallback with parameters response and status\n    callback({\"message\": \"The request was an error!\"}, 400)\n    //A callback function is a function passed into another function as an argument,\n    // which is then invoked inside the outer function to complete some kind of routine or action.\n  }\n  xhr.send() //trigger the request after i send it up\n\n}\n\nfunction TweetsList(props){\n  const [tweets, setTweets] = useState([])\n  \n  useEffect(() =>\n  {\n    //myCallback is a function which takes response and status as parameter\n    const myCallback = (response, status) => {\n      //console.log(response,status)\n      if(status === 200){\n        setTweets(response)\n\n      }\n      else{\n        alert(\"There was an error\")\n      }\n      \n    }\n    // do my lookup\n    //we are passing a function as an argument to another function\n    //It will be async callback since first request to load tweets willbe made\n    //and depending on response myCallback will be called \n    loadTweets(myCallback);\n    //The Map object holds key-value pairs and remembers the original insertion order of the keys.\n  }, [])\n  return tweets.map((item,index)=>{\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-item.id`} />\n  }\n  )\n\n}\n\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsList />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}